#include <stdio.h>
#include<iostream>
#include<string>
#include<cstring>

using namespace std;
//二维数组去储存与理解
int a[1005][1005]={0},appear[1005]={0},total=0,ans=0,n,m,b,c;
bool vis[1005] ={false};


void dfs(int k)//k表示搜索入口点
{
    if(k==c)
    {
        ans++;//ans记录有多少条可以从起点到终点的路线
        for(int i=1;i<=n;i++)
        {
            
            //在dfs搜索的过程 已经经过的点(能够经过(vis[i]上一步=0))是vis =1 
            if(vis[i]){
                appear[i]++;
            }

        }
        return;
    }
    for(int i=1;i<=n;i++){
        if(a[k][i]==1 && !vis[i]){//vis表示没有访问过的站点 不走回头路
            vis[i]=true;
            dfs(i);
            vis[i]=false;
        }
    }

}
int main()
{
cin>>n>>m;
for(int i=1;i<=m;i++)
{
    cin>>b>>c;
    a[b][c]=1;
    a[c][b]=1;
}
cin>>b>>c; //b是起点 c是终点
vis[b]=true;
dfs(b);
for(int i=1;i<=n;i++)
{
    if(appear[i]==ans)//appear[]表示每个站点出现次数
    {
        total++;//total 表示关键点数目
    }
}
if(total == 2) cout<<-1;
else cout<<total-2;
    return 0;
}

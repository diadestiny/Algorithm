从 1~n 这 n 个整数中随机选取任意多个，输出所有可能的选择方案。

输入格式
输入一个整数n。

输出格式
每行输出一种方案。

同一行内的数必须升序排列，相邻两个数用恰好1个空格隔开。

对于没有选任何数的方案，输出空行。

本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。

数据范围
1≤n≤15
输入样例：
3
输出样例：

3
2
2 3
1
1 3
1 2
1 2 3

#include<bits/stdc++.h>
using namespace std;
int n,i;
int arr[20];

void dfs(int cur,int m){
if(cur==n+1){
    for(int i=1;i<m;i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    return;    
}
    dfs(cur+1,m);
    arr[m]=cur;
    dfs(cur+1,m+1);
}

int main() 
{
	cin>>n;
	dfs(1,1);
	return 0;
} 








#include<bits/stdc++.h>
using namespace std;
int n;
bool flag[20];
void dfs(int k)
{
    if(k>n)
    {
        for(int i=1;i<=n;i++)
            if(flag[i]) printf("%d ",i);
        printf("\n");
        return;
    }
    dfs(k+1);
    flag[k]=1;
    
    dfs(k+1);
    
    flag[k]=0;
}
int main()
{
    scanf("%d",&n);
    dfs(1);
    return 0;
}





#include <bits/stdc++.h>
using namespace std;
#define pb push_back
typedef pair<int,int> pii;
typedef long long ll;
typedef double ld;
typedef vector<int> vi;
#define fi first
#define se second
using namespace std;
#define maxn 1007
int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, 1, -1};

struct node
{
    int x,y;
    int cnt;
    node() {}
    node(int _x, int _y, int _cnt) : x(_x), y(_y), cnt(_cnt) {}
};
queue<node> q;
bool vis[maxn][maxn];
char mp[maxn][maxn];
int n, m, k, stx, sty, edx, edy;
int BFS()
{
    memset(vis, 0, sizeof(vis));
    q.push(node(stx-1, sty-1, 0));
    vis[stx-1][sty-1] = 1;
    int ans;
    while (!q.empty())
    {
        node now = q.front();
        q.pop();
        for (int i = 0; i < 4; ++i)
            for (int j = 1; j < k+1; j++)
            {
                int x = now.x + dx[i] * j;
                int y = now.y + dy[i] * j;
                if (x < 0 || x > n-1 || y < 0 || y > m-1 || mp[x][y] == '#' )
                    break;
                if(vis[x][y])
                    continue;
                if (x == edx-1 && y == edy-1)
                return now.cnt+1;
                q.push(node(x, y, now.cnt + 1));
                vis[x][y] = 1;
            }
    }
    return 0;
}

int main()
{

    //freopen("3.in","r",stdin);
    scanf("%d%d%d", &n, &m, &k);
    for (int i = 0; i < n; ++i)
        scanf("%s", &mp[i]);

    scanf("%d%d%d%d", &stx, &sty, &edx, &edy);
    if(int ans=BFS())
        printf("%d\n", ans);
    else
        puts("-1");

    return 0;
}

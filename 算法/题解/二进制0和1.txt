int Grial(int x){ 
int count = 0; 
while (x + 1) 
{ 
count++; 
x |= (x + 1); 
} 
return count;
}int main()
{ 
cout << Grial(1) << endl; 
return 0;
}//为了方便验证，我把求二进制数中1的个数也写下来。
#include <iostream>using namespace std;
int Grial(int x){ int count = 0; 
while (x) 
{ 
count++; 
x &= (x - 1); 
} 
return count;
}
int main(){ 
cout << Grial(3) << endl; 
return 0;
}

直接算法:

Problem D: 二进制
Time Limit: 1 Sec  Memory Limit: 128 MB [Submit] [Clarification] 
Description
阿杰上次考试得了0分，所以他特别讨厌0这个数字，现在给你n个十进制正整数，请你分别判断他们的二进制中是否有0，例如10的二进制是1010，7的二进制是111，5的二进制是101。
，这三个数中只有7的二进制不含有0。

Input
第一行输入一个整数n，代表接下来有n个数据。(0<n<100000)
接下来每行输入一个十进制正整数a（0<a<10000000）

Output
输出一个整数，代表输入的n个整数中，二进制不含0的个数。

Sample Input
3
10
7
5

Sample Output
1


#include<bits/stdc++.h>
using namespace std;

int fun(int a){

int count1=0,count0=0;
while(a){
    if(a&1==1){
         count1++;
    }
    else{
        count0++;
    }

    a=a>>1;
}


return count0;

}
int main() {
    int n;
    int a;
    int ans=0;
    int sum=0;
    cin>>n;
    while(n--){
        cin>>a;

        if(fun(a)==0){
            ans++;
        }
    }
        cout<<ans;
	return 0;
}

